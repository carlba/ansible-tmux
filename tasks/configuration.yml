
- name: retrieve installed packages
  package_facts:
    manager: "auto"

- name: Check if git is installed
  shell: which git
  register: is_git_installed_output
  failed_when: false
  changed_when: false

- name: Retrieve tmux version
  shell: tmux -V
  register: tmux_version_output
  changed_when: false
  failed_when: tmux_version_output.rc != 0 and not 'command not found' in tmux_version_output.stderr

- name: Assert depdencies are installed and of correct version
  assert:
    that:
      - is_git_installed_output.rc == 0
      - tmux_version_output.rc == 0
      - tmux_version_output.stdout.split()[1] is version('1.9', '>=')
    msg: "Dependencies not installed or incorrect version"

# http://docs.ansible.com/ansible/git_module.html
- name: Ensure latest tpm is present from git repo
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"
    clone: yes
    update: yes

- name: Ensure TMUX config is based on template
  template:
    src: tmux.conf.j2
    dest: "{{ ansible_env.HOME }}/.tmux.conf"
    force: true

- name: Ensure TMUX plugins are installed
  shell: "{{ ansible_env.HOME }}/.tmux/plugins/tpm/bin/install_plugins"
  register: result
  changed_when: '"download success" in result.stdout'

- name: Ensure 256 colors is used in TMUX (absent)
  blockinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (make sure 256 colors is used in tmux)"
    content: export TERM=xterm-256color
    state: absent
  when: ansible_os_family not in ['Darwin']
